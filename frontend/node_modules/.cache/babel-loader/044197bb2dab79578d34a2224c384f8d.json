{"ast":null,"code":"var _jsxFileName = \"C:\\\\eCommerce\\\\frontend\\\\src\\\\screens\\\\CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addToCart, removeFromCart } from '../actions/cartActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CartScreen(props) {\n  _s();\n\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  const productId = props.match.params.id;\n  const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1;\n  const dispatch = useDispatch();\n\n  const removeFromCartHandler = productId => {\n    dispatch(removeFromCart(productId));\n  };\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-list\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"cart-list-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Shopping Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" Cart is Empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this) : cartItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.image,\n              alt: \"product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/product/\" + item.product,\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Qty:\", /*#__PURE__*/_jsxDEV(\"select\", {\n                value: item.qty,\n                onChange: e => dispatch(addToCart(item.product, e.value)),\n                children: [...Array(item.countInStock).keys()].map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: x + 1,\n                  children: x + 1\n                }, x + 1, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 44\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"button\",\n                onClick: () => removeFromCartHandler(item.product),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-price\",\n            children: [\"$\", item.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-action\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Subtotal ( \", cartItems.reduce((a, c) => a + c.qty, 0), \" items) : $ \", cartItems.reduce((a, c) => a + c.price * c.qty, 0)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button primary\",\n        disabled: cartItems.length === 0,\n        children: \"Proceed to Checkout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 12\n  }, this);\n}\n\n_s(CartScreen, \"O8kV4FMad4uUEER48J0xtNwHiNw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CartScreen;\nexport default CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["C:/eCommerce/frontend/src/screens/CartScreen.js"],"names":["React","useEffect","Link","useDispatch","useSelector","addToCart","removeFromCart","CartScreen","props","cart","state","cartItems","productId","match","params","id","qty","location","search","Number","split","dispatch","removeFromCartHandler","length","map","item","image","product","name","e","value","Array","countInStock","keys","x","price","reduce","a","c"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\n\r\nfunction CartScreen(props){\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const {cartItems} = cart;\r\n\r\n    const productId = props.match.params.id;\r\n    const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]):1;\r\n    const dispatch = useDispatch();\r\n    const removeFromCartHandler = (productId) => {\r\n\r\n        dispatch(removeFromCart(productId));\r\n\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(productId){\r\n            dispatch(addToCart(productId, qty));\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    return <div className=\"cart\">\r\n        <div className=\"cart-list\">\r\n            <ul className = \"cart-list-container\">\r\n                <li>\r\n                    <h3>\r\n                        Shopping Cart\r\n                    </h3>\r\n                    <div>\r\n                        Price\r\n                    </div>\r\n                </li>\r\n                {\r\n                    cartItems.length ===0 ?\r\n                    <div> Cart is Empty</div>\r\n                    :\r\n                    cartItems.map( item => \r\n                        <li>\r\n                            <div className=\"cart-image\">\r\n                            <img src={item.image} alt=\"product\" />\r\n                            </div>\r\n                            \r\n                            <div className=\"cart-name\">\r\n                                <div>\r\n                                    <Link to={\"/product/\" + item.product}>\r\n                                    {item.name}\r\n                                    </Link>\r\n                                </div>\r\n                                <div>\r\n                                    Qty:\r\n                                <select value={item.qty} onChange={(e) => dispatch(addToCart(item.product, e.value))}>\r\n                                        {[...Array(item.countInStock).keys()].map(x =>\r\n                                           <option key={x + 1} value={x + 1}>{x + 1}</option> \r\n                                            \r\n                                        )}\r\n                                    </select>\r\n                                    <button type=\"button\" className=\"button\" onClick={() => removeFromCartHandler(item.product)}>Delete</button>                                    \r\n                                </div>\r\n                            </div>\r\n                        <div className =\"cart-price\">\r\n                           ${item.price} \r\n                        </div>                            \r\n                        </li>)\r\n                }\r\n\r\n            </ul>\r\n\r\n        </div>\r\n        <div className=\"cart-action\">\r\n            <h3>\r\n                Subtotal ( {cartItems.reduce((a, c) => a + c.qty, 0)} items)\r\n                    :\r\n                    $ {cartItems.reduce((a,c)=>a + c.price * c.qty, 0)}\r\n\r\n                </h3>\r\n                <button className=\"button primary\" disabled={cartItems.length ===0}>\r\n                Proceed to Checkout\r\n                </button>\r\n\r\n\r\n        </div>\r\n        </div>\r\n    }\r\n\r\nexport default CartScreen;"]},"metadata":{},"sourceType":"module"}