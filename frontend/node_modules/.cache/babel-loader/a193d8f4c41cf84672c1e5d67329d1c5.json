{"ast":null,"code":"import { CART_ADD_ITEM } from \"../constants/cartConstants\";\n\nfunction cartReducer(state = {\n  cartItems: []\n}, action) {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const product = state.cartItems.find(x => x.product === item.product);\n\n      if (product) {\n        return {\n          cartItems: state.cartItems.map(x => x.product === product.product ? product : x)\n        };\n      }\n\n      return {\n        cartItems: [...state.cartItems, item]\n      };\n\n    case CART_REMOVE_ITEM:\n      return {\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport { cartReducer };","map":{"version":3,"sources":["C:/eCommerce/frontend/src/reducer/cartReducers.js"],"names":["CART_ADD_ITEM","cartReducer","state","cartItems","action","type","item","payload","product","find","x","map","CART_REMOVE_ITEM","filter"],"mappings":"AAAA,SAASA,aAAT,QAA8B,4BAA9B;;AAEA,SAASC,WAAT,CAAqBC,KAAK,GAAC;AAACC,EAAAA,SAAS,EAAC;AAAX,CAA3B,EAA2CC,MAA3C,EAAkD;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKL,aAAL;AACI,YAAMM,IAAI,GAAGF,MAAM,CAACG,OAApB;AACA,YAAMC,OAAO,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAqBC,CAAC,IAAGA,CAAC,CAACF,OAAF,KAAcF,IAAI,CAACE,OAA5C,CAAhB;;AACA,UAAGA,OAAH,EAAW;AACP,eAAM;AACFL,UAAAA,SAAS,EACLD,KAAK,CAACC,SAAN,CAAgBQ,GAAhB,CAAoBD,CAAC,IAAEA,CAAC,CAACF,OAAF,KAAaA,OAAO,CAACA,OAArB,GAA6BA,OAA7B,GAAsCE,CAA7D;AAFF,SAAN;AAGH;;AACD,aAAO;AAACP,QAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AAAZ,OAAP;;AACA,SAAKM,gBAAL;AACI,aAAM;AAAET,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,MAAhB,CAAuBH,CAAC,IAAEA,CAAC,CAACF,OAAF,KAAaJ,MAAM,CAACG,OAA9C;AAAb,OAAN;;AACJ;AACI,aAAOL,KAAP;AAbZ;AAeH;;AAED,SAASD,WAAT","sourcesContent":["import { CART_ADD_ITEM } from \"../constants/cartConstants\";\r\n\r\nfunction cartReducer(state={cartItems:[]}, action){\r\n    switch(action.type){\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload;\r\n            const product = state.cartItems.find(x=> x.product === item.product);\r\n            if(product){\r\n                return{\r\n                    cartItems: \r\n                        state.cartItems.map(x=>x.product=== product.product?product: x)};\r\n            }\r\n            return {cartItems: [...state.cartItems, item]}\r\n            case CART_REMOVE_ITEM:\r\n                return{ cartItems: state.cartItems.filter(x=>x.product!== action.payload)}\r\n            default:\r\n                return state\r\n    }\r\n}\r\n\r\nexport { cartReducer }"]},"metadata":{},"sourceType":"module"}